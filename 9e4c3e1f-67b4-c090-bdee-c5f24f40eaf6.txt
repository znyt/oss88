    完成代码升级后的“微光”从0.1版本直接升级为LV1版本，秦克兴致勃勃地着手进行测试。<br/><br/>    身处在虚拟世界里，秦克不用担心说话会被别人听到，所以他直接以语音与“微光（虚拟）”对话。<br/><br/>    “微光，睡醒了没？”<br/><br/>    升级后重新接管了笔记本电脑硬件权限的微光立时回应了：“主人，微光已醒来了，我感觉自己就像是忽然‘醍醐灌顶’, 变聪明了。”<br/><br/>    升级后的微光，说话时已有了几分人类交谈时的平仄起伏，不再像v0.1时冷冰冰像念台词的机械音，甚至还会用“感觉”、“像”这样的拟人感受和“醍醐灌顶”之类的词汇。<br/><br/>    当然，这并不意味着它有了真正的自主学习能力或者有了自我意识，它依然只能在秦克制订的“学习规则”里进行学习。<br/><br/>    因为它还缺乏最关键的判断“信息熵”能力——即从无数信息中主动判断哪些信息是有用的，从而进行学习和模仿。<br/><br/>    从这个角度来说，LV1的微光依然处于相对低级的人工智能阶段, 甚至连人类的幼儿都不如，毕竟幼儿具备处理“信息熵”能力，可以从父母和身边人的说话举止进行分析和模仿学习。<br/><br/>    估计想让微光真正具备处理“信息熵”能力，起码要升级到LV2甚至更高的级别了。<br/><br/>    不过秦克这次微光的升级里，自己加入了几千行代码。这些代码是秦克自己琢磨出来的，并不在系统提供的三十万行LV1人工智能代码中。<br/><br/>    这几千行代码的作用只有一个，就是让微光能通过特定的人机对话，学习并模仿人类的逻辑和思维方式，使之越来越“人性化”。<br/><br/>    这个“特定”的对话权限，秦克只打算开放给自己、宁青筠和妹妹秦小壳，他已写好了接口，只需要手机微信加了“微光”为好友，就能通过微信直接与它对话。<br/><br/>    秦克又测试了一些功能，总体对LV1微光的还算是满意的，起码它看起来有了点人工智能的样子了，能主动分析辨断主人的需求、学习主人的使用习惯，以提高主人操作电脑的效率，光从这点来看, 微光已大幅超过什么siri或者小爱同学，作为青柠操作系统的核心主脑，它是合格的。<br/><br/>    秦克再测试微光最重要的“代码扩展能力”。<br/><br/>    “微光，你试着分析旁边这台水果笔记本的电脑硬件配置，并进行驱动程序的解析和重构，编写出适合它的硬件驱程小模块。”<br/><br/>    “收到，微光现在就去工作了，请主人稍候。”<br/><br/>    伴随着微光进入工作状态，笔记本电脑的风扇立时疯狂地转动起来，CPU的使用率瞬间接近100%。<br/><br/>    秦克从打开后台的代码执行监测功能界面里，能看到一行行的代码正以肉眼难辨的速度执行中，而右边的窗口里刚显示着微光正执行操作的进度详解。<br/><br/>    秦克观察了一会，不错，微光正按着KEY模块的“规则”进行工作。<br/><br/>    青柠操作系统的硬件管理模块，主要是有制订规则的“KEY”核心模块，和各种型号硬件的驱程小模块组成。<br/><br/>    “KEY”核心模块制定下如何发现、添加、删除、使用硬件设备的规则，以及如何组合驱程小模块，同时它也是微光的工具，微光通过它来管理起计算机的硬件资源，并进行合理调度分配。<br/><br/>    现在微光按着秦克编写好的流程, 以“KEY”核心模块的规则进行代码编写。<br/><br/>    它先分析旁边那台以宁青筠的水果笔记本为蓝本、“重现”在这个虚拟世界的水果笔记本电脑，获取其硬件的型号信息，然后自动从网上下载对应的驱动程序进行解析，然后按“KEY”模块的规则进行重构，生成最精练、最高效的硬件驱程小模块，再“粘合”到“KEY”模块上。<br/><br/>    ——不同的硬件，这个驱程小模块自然不一样，但只要微光针对所有市面上的计算机硬件都编写出驱动小模块，就能自由根据不同计算机的情况来选择小模块组装。<br/><br/>    秦克观察了一会儿，发现当前LV1版本的微光，其代码解析重构能力不算强，一方面是微光的等级较低，处理能力有限，另一方面是受到笔记本的性能限制。<br/><br/>    是的，虽然秦克买的已是五万元的高配版笔记本电脑了，但这时依然是制约微光性能的主要瓶颈，使得微光无法发挥出最佳的状态。<br/><br/>    看了一会，秦克就估算出来了，估计微光要完成水果笔记本的硬件驱程管理小模块的开发编写工作，需要一天左右。<br/><br/>    效率确实有点低，可喜的是整个过程并无报错。<br/><br/>    秦克想了想，直接将“人工智能科研实验室”的时间流速提升一千倍，很快他就便看到微光提示已完成代码编译工作。<br/><br/>    与之对应的是笔记本电脑烫得吓人，散热口吹出来的风都能灼人皮肤。笔记本电脑的CPU没因过载而烧毁，已算是证明微光对于硬件的管理调度控制能力确实不错。<br/><br/>    秦克无语地摇摇头，看来得想法子给微光买台最高性能的服务器了，自己的笔记本再这样被它玩下去，不久就得报废了。<br/><br/>    再次调快时间流速，使笔记本电脑散热完毕，秦克才亲自检查了一遍微光写好的代码。<br/><br/>    比起他亲自写的逊色了一筹，微光编写出来的代码的执行效率不够高，代码也不够简洁，但已比世上八成的程序员水平要高了，关键是秦克没发现任何的错误，这就足够了。<br/><br/>    而且所谓的执行效率不够高，也就是执行时间没能从0.008秒缩减到0.007秒罢了，对于电脑使用者来说完全可以忽略不计。<br/><br/>    秦克又试着在青柠操作系统分别安装Windows、Linux、macOS、安卓、IOS的应用程序，“微光”立时便使用了解构重建工具，这些跨越系统不同版本的程序全部都被微光分解为一个个的小模块，并成功安装。<br/><br/>    测试了一下几个常见应用程序的启动与运行速度，都比在原本的操作系统里还要快些。<br/><br/>    不错啊！<br/><br/>    秦克有些激动了。<br/><br/>    一个操作系统，最重要的就是应用生态，也就是说能支持多少的应用程序，光从这点来说，青柠操作系统就能秒杀市面上所有的操作系统了。<br/><br/>    因为它能兼容所有的应用程序，也不必强逼程序员修改编程习惯，他们喜欢说什么编程语言就用什么编程语言，这无疑会得到应用生态中最关键的上游“程序员”与下游“用户”的支持，至于中游的“厂商”，那就更容易争取了，甚至主要的盈利点就在他们身上。<br/><br/>    秦克的青柠操作系统是计划免费供个人非商业用途使用，拥有了用户就拥有了话语权，“厂商”只能低头老实地交版权费，才能在自己的计算机里合法地使用青柠操作系统。<br/><br/>    秦克只需要将版权费定得低点，不怕“厂商”们不抢着用青柠操作系统。<br/><br/>    这样一想，估计系统的五百万装机量任务，不会太难完成。<br/><br/>    秦克沉思过后，重新复制了一份操作系统的代码并进行了修改优化，再封装打包成一份V1.0版本的青柠操作系统安装包。<br/><br/>    在这份青柠操作系统V1.0版本里，起核心作用的人工智能被命名为“小青”（默认名字，可由操作系统的新主人重新命名）。<br/><br/>    “小青”基本拥有当前“微光”的大部分功能，不一样之处在于，它没有代码编写能力，也没有秦克那几千行额外增加的“促进人性化”的代码。<br/><br/>    这自然是为了精简操作系统的体积，不然都像“微光”那样拥有庞大的小模块集群，这个全新型模块化操作系统就失去了意义。<br/><br/>    另外也是为了节省计算资源，提高使用的流畅体验，连秦克这样5万元的顶级笔记本电脑，“微光”进行代码编写时都几乎要跑废，更加别绝大多数人的普通电脑了。<br/><br/>    在全新的模块化架构下，各大PC终端的“小青”们需要什么小模块，都可以先从“微光”的“小模块仓库”里搜索，有现成的就直接下载使用，没有现成的，就把需求发给“微光”，由微光在服务器端进行代码编写、存入模块库并下发。<br/><br/>    秦克花了半晚时间，搞定了V1.0版本操作系统的代码修改工作，然后以自己的笔记本为“核心服务器”，储存所有的小模块，最后到水果笔记上进行安装测试。<br/><br/>    v1.0版本的青柠操作系统，安装起来依然很快，两分钟不到就完成了安装，并且操作系统的核心“小青”自动运行，以附加的万能网卡驱动联网后从秦克的笔记本里下载了不久前才编写好的水果笔记本驱程小模块，随即将略显臃肿的万能网卡驱动小模块卸载删除。<br/><br/>    全程自主执行，都对用户来说是透明的，他们只看到两分半钟左右，操作系统就完成全部安装并重启了，而且使用起来比普通的操作系统便捷许多。<br/><br/>    秦克又测试了手势控制、唇语控制，极速书写控制，语音控制，全都顺利运行。<br/><br/>